---
name: CI

on: [pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# This pipeline validates proposed changes.
#
# CI pipeline based on:
# - https://github.com/heim-rs/heim/blob/master/.github/workflows/ci.yml
# - https://github.com/BurntSushi/ripgrep/blob/master/.github/workflows/ci.yml
# - https://github.com/ClementTsang/bottom/blob/master/.github/workflows/ci.yml

env:
  BINARY_NAME: monorepo
  RUST_BACKTRACE: 1

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build docker image
        run: docker build -f Dockerfile .

  # Room for improvement regarding caching/work-skipping. One example here
  # https://github.com/ClementTsang/bottom/blob/92ec3599363c710815c286e975bbb6cc748708dd/.github/workflows/ci.yml#L195
  cargo-check:
    runs-on: ${{ matrix.triple.os }}
    strategy:
      matrix:
        triple:
          - { os: "ubuntu-latest", target: "x86_64-unknown-linux-musl", cross: false }
          - { os: "ubuntu-latest", target: "i686-unknown-linux-musl", cross: true }
          - { os: "macOS-latest", target: "x86_64-apple-darwin", cross: false }
          # aarch64
          - { os: "ubuntu-latest", target: "aarch64-unknown-linux-musl", cross: true }
          # macOS ARM
          - { os: "macOS-latest", target: "aarch64-apple-darwin", cross: true }
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install build inputs
        run: sudo apt install musl-tools
        if: runner.os == 'Linux' && matrix.triple.cross == false

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        id: rust-toolchain
        with:
          toolchain: stable
          target: ${{ matrix.triple.target }}

      - name: Install cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Cache cargo
        uses: actions/cache@v3
        id: cache-cargo
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.cachekey }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-targets --verbose --target=${{ matrix.triple.target }}
          use-cross: ${{ matrix.triple.cross }}

      - name: Cross-compile
        if: matrix.triple.cross == true
        run: cross check --all-targets --target ${{ matrix.triple.target }} --verbose

      - name: Compile
        if: matrix.triple.cross == false
        run: cargo check --all-targets --target ${{ matrix.triple.target }} --verbose
